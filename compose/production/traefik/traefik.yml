api:
  dashboard: true

log:
  level: INFO

entryPoints:
  web:
    # http
    address: ':80'
    http:
      # Redirect to HTTPS
      redirections:
        entryPoint:
          to: web-secure
          scheme: https

  web-secure:
    # https
    address: ':443'

  flower:
    address: ':5555'

certificatesResolvers:
  letsencrypt:
    acme:
      email: 'chasem@wustl.edu'
      storage: /etc/traefik/acme/acme.json
      httpChallenge:
        entryPoint: web

http:
  routers:
    web-secure-router:
      rule: 'Host(`yeastregulatorydb.com`) || Host(`www.yeastregulatorydb.com`)'
      entryPoints:
        - web-secure
      middlewares:
        - csrf
      service: django
      tls:
        certResolver: letsencrypt

    dashboard:
      rule: "Host(`traefik.yeastregulatorydb.com`)"
      entryPoints:
        - web-secure
      service: api@internal
      middlewares:
        - auth
      tls:
        certResolver: letsencrypt

    flower-secure-router:
      rule: 'Host(`yeastregulatorydb.com`)'
      entryPoints:
        - flower
      service: flower
      tls:
        certResolver: letsencrypt

  middlewares:
    csrf:
      headers:
        hostsProxyHeaders: ['X-CSRFToken']

    auth:
      basicAuth:
        users:
          - "admin:$2y$05$gMtvNzmR/XDTMzqDYOzJo.zoaLOY2BNOgncORJo0PyLakKFv.Jsv2"  # Example, replace with actual hashed credentials

  services:
    django:
      loadBalancer:
        servers:
          - url: http://django:5000

    flower:
      loadBalancer:
        servers:
          - url: http://flower:5555

providers:
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
